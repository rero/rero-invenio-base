#!/usr/bin/env bash
# -*- coding: utf-8 -*-
#
# RERO Invenio Base
# Copyright (C) 2022 RERO.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.


# Usage:
#   env DB=postgresql12 SEARCH=elasticsearch7 CACHE=redis MQ=rabbitmq ./run-tests.sh
# COLORS for messages
NC='\033[0m'                    # Default color
INFO_COLOR='\033[1;97;44m'      # Bold + white + blue background
SUCCESS_COLOR='\033[1;97;42m'   # Bold + white + green background
ERROR_COLOR='\033[1;97;41m'     # Bold + white + red background

# MESSAGES
msg() {
  echo -e "${1}" 1>&2
}
# Display a colored message
# More info: https://misc.flogisoft.com/bash/tip_colors_and_formatting
# $1: choosen color
# $2: title
# $3: the message

colored_msg() {
  msg "${1}[${2}]: ${3}${NC}"
}

info_msg() {
  colored_msg "${INFO_COLOR}" "INFO" "${1}"
}

error_msg() {
  colored_msg "${ERROR_COLOR}" "ERROR" "${1}"
}

error_msg+exit() {
    error_msg "${1}" && exit 1
}

success_msg() {
  colored_msg "${SUCCESS_COLOR}" "SUCCESS" "${1}"
}

success_msg+exit() {
  colored_msg "${SUCCESS_COLOR}" "SUCCESS" "${1}" && exit 0
}

# Quit on errors
set -o errexit

# Quit on unbound symbols
set -o nounset

# Always bring down docker services
function cleanup() {
    # Note: for now we do not need this for the tests.
    eval "$(docker-services-cli down --env)"
    echo "Done: $?"
}
trap cleanup EXIT

info_msg "Check vulnerabilities:"
pip_audit_exceptions="--ignore-vuln PYSEC-2022-42969"
PIPAPI_PYTHON_LOCATION=`which python` pip-audit ${pip_audit_exceptions}

info_msg "Check license:"
flask rero utils check_license check_license_config.yml

info_msg "Test pydocstyle:"
pydocstyle rero_ils tests docs

info_msg "Test isort:"
isort --check-only --diff rero_invenio_base tests

info_msg "Test black:"
black tests rero_invenio_base tests --check

info_msg "Test useless imports:"
autoflake --recursive --remove-all-unused-imports --ignore-init-module-imports --check-diff --quiet .

# info_msg "Sphinx-build:"
# sphinx-build -qnNW docs docs/_build/html

# Note: for now we do not need this for the tests.
export DOCKER_SERVICES_FILEPATH=./docker-services.yml
export ELASTICSEARCH_VERSION=7.10.2
eval "$(docker-services-cli up --search ${SEARCH:-elasticsearch} --env)"
info_msg "Tests All:"
python -m pytest

